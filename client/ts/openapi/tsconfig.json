{
  "compilerOptions": {
    /* Basic Options */
    "target": "es2015",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */
    "module": "es2015",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "jsx": "react",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "sourceMap": true,                     /* Generates corresponding '.map' file. */

    /* Strict Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options. */
//    "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
//    "strictNullChecks": true,              /* Enable strict null checks. */
//    "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */

    // openapi-generatorで生成されるコードが引っかかるので制約はゆるめに
    // tslintの除外対象になっているので、tslint側で調整する
    /* Additional Checks */
//     "noUnusedLocals": true,                /* Report errors on unused locals. */
//     "noUnusedParameters": true,            /* Report errors on unused parameters. */
//     "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
//     "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */

    /* Module Resolution Options */
    "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */

    "typeRoots": ["./types", "./node_modules/@types"]
  },
  "include": [
    "src/"
  ],
  "exclude": [
    "node_modules"
  ]
}
